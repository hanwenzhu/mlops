# Adaptive container with the CK interface
# Concept: https://arxiv.org/abs/2011.01149

FROM ubuntu:20.04

# Contact
LABEL maintainer="Grigori Fursin <grigori@octoml.ai>"

# Shell info
SHELL ["/bin/bash", "-c"]
ENTRYPOINT ["/bin/bash", "-c"]

# Set noninteractive mode for apt (do not use ENV)
ARG DEBIAN_FRONTEND=noninteractive

# Notes: https://runnable.com/blog/9-common-dockerfile-mistakes
# Install system dependencies
RUN apt update && \
    apt install -y --no-install-recommends \
           apt-utils \
           git wget zip bzip2 libz-dev libbz2-dev cmake curl unzip \
           openssh-client vim mc tree \
           gcc g++ autoconf autogen libtool make libc6-dev build-essential \
           libssl-dev libbz2-dev libffi-dev \
           python3 python3-pip python3-dev \
           sudo

# Prepare a user with a user group with a random id
RUN groupadd -g 1111 octoml
RUN useradd -u 2222 -g octoml --create-home --shell /bin/bash octoml
RUN echo "octoml:octoml" | chpasswd
RUN adduser octoml sudo
RUN echo "octoml   ALL=(ALL)  NOPASSWD:ALL" >> /etc/sudoers

# Set user
USER octoml:octoml
WORKDIR /home/octoml
ENV PATH="/home/octoml/.local/bin:${PATH}"
RUN mkdir .ssh

# Install CK
RUN export DUMMY_CK=B
RUN ${DUMMY_CK} pip3 install virtualenv
RUN ${DUMMY_CK} pip3 install ck

# Clone ck-ml repo
RUN ck pull repo:ck-ml

# Install packages to CK env entries
RUN ck setup kernel --var.install_to_env=yes

RUN ck detect platform.os --platform_init_uoa=generic-linux-dummy
RUN ck detect soft:compiler.python --full_path=/usr/bin/python3

RUN ck detect soft:compiler.gcc --full_path=`which gcc`

RUN ck install package --tags=tool,cmake,prebuilt --quiet

RUN ck install package --tags=lib,python-package,absl
RUN ck install package --tags=lib,python-package,numpy
RUN ck install package --tags=lib,python-package,matplotlib
RUN ck install package --tags=lib,python-package,cython
RUN ck install package --tags=lib,python-package,pillow

RUN ck install package --tags=mlperf,inference,src,r1.0
RUN ck install package --tags=lib,mlperf,loadgen,static

RUN ck install package --tags=lib,tflite,via-cmake,v2.4.1,with.ruy
RUN ck install package --tags=api,model,tensorflow,r2.3.0

RUN ck install package --tags=tool,coco,api

RUN ck install package --tags=dataset,coco,val,2017,full
RUN ck install package --tags=dataset,object-detection,preprocessed,full,side.300,using-pillow
RUN ck install package --tags=model,tflite,object-detection,ssd-mobilenet,non-quantized,from-zenodo
